// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fetching logic > displays an error popup on failed network request 1`] = `
<div
  aria-label="Error message"
  class="error-popup"
  role="alert"
>
  <p>
    An error occurred. Please try again.
  </p>
</div>
`;

exports[`fetching logic > displays an error popup on failed requests 1`] = `
<div
  aria-label="Error message"
  class="error-popup"
  role="alert"
>
  <p>
    An error occurred. Please try again.
  </p>
</div>
`;

exports[`fetching logic > displays validation messages on 422 1`] = `
<p>
  First validation message
</p>
`;

exports[`fetching logic > displays validation messages on 422 2`] = `
<p>
  Second validation message
</p>
`;

exports[`renders empty inputs correctly(non-password) 1`] = `
[
  <input
    id="username"
    name="username"
    placeholder="Username"
    type="text"
    value=""
  />,
  <input
    id="email"
    name="email"
    placeholder="Email"
    type="email"
    value=""
  />,
  <input
    id="firstName"
    name="firstName"
    placeholder="First Name"
    type="text"
    value=""
  />,
  <input
    id="lastName"
    name="lastName"
    placeholder="Last Name"
    type="text"
    value=""
  />,
]
`;

exports[`renders empty inputs correctly(password) 1`] = `
[
  <input
    aria-label="Password input"
    data-testid="pw-input"
    id="password"
    name="password"
    placeholder="Password"
    type="password"
    value=""
  />,
  <input
    aria-label="Password Confirmation input"
    data-testid="pw-input"
    id="passwordConf"
    name="passwordConf"
    placeholder="Confirm Password"
    type="password"
    value=""
  />,
]
`;

exports[`renders form with right attributes 1`] = `
NamedNodeMap {
  "aria-label": "Login form",
  "class": "_register-form_9e6f01",
  "novalidate": "",
}
`;

exports[`renders labels with right attribute 1`] = `
[
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "username",
  },
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "email",
  },
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "firstName",
  },
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "lastName",
  },
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "password",
  },
  NamedNodeMap {
    "data-testid": "input-label",
    "for": "passwordConf",
  },
]
`;

exports[`validation logic > renders many invalid inputs correctly(all of them in nearly correct setup) 1`] = `
[
  <span
    aria-label="Username validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Username field is required
  </span>,
  <span
    aria-label="Email validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Value provided must be an valid email address
  </span>,
  <span
    aria-label="First Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    First name is required
  </span>,
  <span
    aria-label="Last Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Last name is required
  </span>,
  <span
    aria-label="Confirm Password validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Password confirmation must be same as password
  </span>,
]
`;

exports[`validation logic > renders one invalid input correctly(passConfirmation) 1`] = `
<span
  aria-label="Confirm Password validation error"
  class="_client-validation-error_4fc6c6"
  data-testid="validation-msg"
>
  Password confirmation must be same as password
</span>
`;

exports[`validation logic > renders validation errors after interacting with any input 1`] = `
[
  <span
    aria-label="Username validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Username field is required
  </span>,
  <span
    aria-label="Email validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Email field is required
  </span>,
  <span
    aria-label="First Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    First name is required
  </span>,
  <span
    aria-label="Last Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Last name is required
  </span>,
  <span
    aria-label="Password validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Password must contain at least one uppercase letter
  </span>,
  <span
    aria-label="Confirm Password validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Password confirmation is required
  </span>,
]
`;

exports[`validation logic > renders validation errors after interacting with input 1`] = `
[
  <span
    aria-label="Email validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Email field is required
  </span>,
  <span
    aria-label="First Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    First name is required
  </span>,
  <span
    aria-label="Last Name validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Last name is required
  </span>,
  <span
    aria-label="Password validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Password field is required
  </span>,
  <span
    aria-label="Confirm Password validation error"
    class="_client-validation-error_4fc6c6"
    data-testid="validation-msg"
  >
    Password confirmation is required
  </span>,
]
`;
